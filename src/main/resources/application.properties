server.port=7171
spring.datasource.url=jdbc:mysql://localhost:3306/intercepter2
spring.datasource.username=root
spring.datasource.password=Tejas#07
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.user.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.main.allow-bean-definition-overriding=true

#code for storing data in database
#//        StarEntity auditLog = new StarEntity();
#//        auditLog.setRequestTime(String.valueOf(startTime));
#//        auditLog.setRequestMethod(request.getMethod());
#//        auditLog.setRequestURI(request.getRequestURI());
#//        auditLog.setRequestHeaders(requestHeaders);
#//        auditLog.setRequestBody(requestBody);
#//        auditLog.setTimeTaken(String.valueOf(timeTaken));
#//        auditLog.setResponseStatusCode(statusCode);
#//        auditLog.setResponseHeaders(responseHeaders);
#//        auditLog.setContextPath(request.getContextPath());
#//        auditLog.setMethodUsed(request.getMethod());


#code for printing the header in the console
#private void logRequestData(HttpServletRequest request) {
#////        System.out.println("Request Method: " + request.getMethod());
#////        System.out.println("Request URI: " + request.getRequestURI());
#//        request.getHeaderNames().asIterator().forEachRemaining(headerName -> {
#//            System.out.println("Request Header: " + headerName + " = " + request.getHeader(headerName));
#//        });
#//        if ("POST".equals(request.getMethod())) {
#//            try {
#//                String requestBody = StreamUtils.copyToString(request.getInputStream(), StandardCharsets.UTF_8);
#//                System.out.println("Request Body: " + requestBody);
#//            } catch (IOException e) {
#//                e.printStackTrace();
#//            }
#//        }
#//    }
#//
#//    private void logResponseData(HttpServletResponse response) {
#//        // Log response headers (customize as needed)
#//        response.getHeaderNames().forEach(headerName -> {
#//            System.out.println("Response Header: " + headerName + " = " + response.getHeader(headerName));
#//        });
#//    }
